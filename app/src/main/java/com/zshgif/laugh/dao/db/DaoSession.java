package com.zshgif.laugh.dao.db;

import android.database.sqlite.SQLiteDatabase;

import com.zshgif.laugh.dao.CommentsBeanDao;
import com.zshgif.laugh.dao.DuanZiBeanDao;
import com.zshgif.laugh.dao.GifitemBeanDao;
import com.zshgif.laugh.dao.PictureBeanDao;
import com.zshgif.laugh.dao.ReleaseUserDao;
import com.zshgif.laugh.dao.VideoBeanDao;
import com.zshgif.laugh.model.CommentsBean;
import com.zshgif.laugh.model.DuanZiBean;
import com.zshgif.laugh.model.GifitemBean;
import com.zshgif.laugh.model.PictureBean;
import com.zshgif.laugh.model.ReleaseUser;
import com.zshgif.laugh.model.VideoBean;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;



// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig gifitemBeanDaoConfig;
    private final DaoConfig pictureBeanDaoConfig;
    private final DaoConfig commentsBeanDaoConfig;
    private final DaoConfig releaseUserDaoConfig;
    private final DaoConfig duanZiBeanDaoConfig;
    private final DaoConfig videoBeanDaoConfig;

    private final GifitemBeanDao gifitemBeanDao;
    private final PictureBeanDao pictureBeanDao;
    private final CommentsBeanDao commentsBeanDao;
    private final ReleaseUserDao releaseUserDao;
    private final DuanZiBeanDao duanZiBeanDao;
    private final VideoBeanDao videoBeanDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        gifitemBeanDaoConfig = daoConfigMap.get(GifitemBeanDao.class).clone();
        gifitemBeanDaoConfig.initIdentityScope(type);

        pictureBeanDaoConfig = daoConfigMap.get(PictureBeanDao.class).clone();
        pictureBeanDaoConfig.initIdentityScope(type);

        commentsBeanDaoConfig = daoConfigMap.get(CommentsBeanDao.class).clone();
        commentsBeanDaoConfig.initIdentityScope(type);

        releaseUserDaoConfig = daoConfigMap.get(ReleaseUserDao.class).clone();
        releaseUserDaoConfig.initIdentityScope(type);

        duanZiBeanDaoConfig = daoConfigMap.get(DuanZiBeanDao.class).clone();
        duanZiBeanDaoConfig.initIdentityScope(type);

        videoBeanDaoConfig = daoConfigMap.get(VideoBeanDao.class).clone();
        videoBeanDaoConfig.initIdentityScope(type);

        gifitemBeanDao = new GifitemBeanDao(gifitemBeanDaoConfig, this);
        pictureBeanDao = new PictureBeanDao(pictureBeanDaoConfig, this);
        commentsBeanDao = new CommentsBeanDao(commentsBeanDaoConfig, this);
        releaseUserDao = new ReleaseUserDao(releaseUserDaoConfig, this);
        duanZiBeanDao = new DuanZiBeanDao(duanZiBeanDaoConfig, this);
        videoBeanDao = new VideoBeanDao(videoBeanDaoConfig, this);

        registerDao(GifitemBean.class, gifitemBeanDao);
        registerDao(PictureBean.class, pictureBeanDao);
        registerDao(CommentsBean.class, commentsBeanDao);
        registerDao(ReleaseUser.class, releaseUserDao);
        registerDao(DuanZiBean.class, duanZiBeanDao);
        registerDao(VideoBean.class, videoBeanDao);
    }
    
    public void clear() {
        gifitemBeanDaoConfig.getIdentityScope().clear();
        pictureBeanDaoConfig.getIdentityScope().clear();
        commentsBeanDaoConfig.getIdentityScope().clear();
        releaseUserDaoConfig.getIdentityScope().clear();
        duanZiBeanDaoConfig.getIdentityScope().clear();
        videoBeanDaoConfig.getIdentityScope().clear();
    }

    public GifitemBeanDao getGifitemBeanDao() {
        return gifitemBeanDao;
    }

    public PictureBeanDao getPictureBeanDao() {
        return pictureBeanDao;
    }

    public CommentsBeanDao getCommentsBeanDao() {
        return commentsBeanDao;
    }

    public ReleaseUserDao getReleaseUserDao() {
        return releaseUserDao;
    }

    public DuanZiBeanDao getDuanZiBeanDao() {
        return duanZiBeanDao;
    }

    public VideoBeanDao getVideoBeanDao() {
        return videoBeanDao;
    }

}
